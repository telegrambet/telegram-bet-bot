import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import sqlite3

# FunÃ§Ã£o para conectar ao banco de dados
def conectar():
Â  Â  return sqlite3.connect("apostas.db")

# Comando /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
Â  Â  keyboard = [
Â  Â  Â  Â  [InlineKeyboardButton("âœ… Acessar", callback_data="acessar")]
Â  Â  ]
Â  Â  reply_markup = InlineKeyboardMarkup(keyboard)

Â  Â  await update.message.reply_text(
Â  Â  Â  Â  "Fala jogador! âš½ðŸ¥‡ Bem-vindo ao Telegram Bet! A Bet OFICIAL no telegram",
Â  Â  Â  Â  reply_markup=reply_markup
Â  Â  )

# Comando /acessar (funÃ§Ã£o principal de login)
async def acessar(update: Update, context: ContextTypes.DEFAULT_TYPE):
Â  Â  nome = update.effective_user.first_name
Â  Â  id_telegram = update.effective_user.id

Â  Â  # Conecta e verifica se o usuÃ¡rio jÃ¡ existe
Â  Â  conn = conectar()
Â  Â  cursor = conn.cursor()

Â  Â  cursor.execute("SELECT * FROM usuarios WHERE id_telegram = ?", (id_telegram,))
Â  Â  usuario = cursor.fetchone()

Â  Â  # Se nÃ£o existir, cria com saldo 0
Â  Â  if not usuario:
Â  Â  Â  Â  cursor.execute("INSERT INTO usuarios (id_telegram, nome, saldo) VALUES (?, ?, ?)",
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â (id_telegram, nome, 0))
Â  Â  Â  Â  conn.commit()

Â  Â  conn.close()

Â  Â  # Mensagem de boas-vindas
Â  Â  mensagem = (
Â  Â  Â  Â  "âœ… Acesso liberado com sucesso\n"
Â  Â  Â  Â  f"ðŸ‘¤ Nome: {nome}\n"
Â  Â  Â  Â  f"ðŸ†” ID: {id_telegram}"
Â  Â  )

Â  Â  if update.callback_query:
Â  Â  Â  Â  await update.callback_query.answer()
Â  Â  Â  Â  await update.callback_query.edit_message_text(text=mensagem)
Â  Â  else:
Â  Â  Â  Â  await update.message.reply_text(mensagem)

# InÃ­cio do bot
if __name__ == "__main__":
Â  Â  from dotenv import load_dotenv
Â  Â  load_dotenv()

Â  Â  TOKEN = os.environ["BOT_TOKEN"]
Â  Â  app = ApplicationBuilder().token(TOKEN).build()

Â  Â  # Comandos
Â  Â  app.add_handler(CommandHandler("start", start))
Â  Â  app.add_handler(CommandHandler("acessar", acessar))

Â  Â  # Callback para botÃ£o "Acessar"
Â  Â  from telegram.ext import CallbackQueryHandler
Â  Â  app.add_handler(CallbackQueryHandler(acessar, pattern="^acessar$"))

Â  Â  print("Bot rodando...")
Â  Â  app.run_polling()
